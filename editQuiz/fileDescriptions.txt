this directory should contain all code for the creation
or editing of quizzes.

Quiz editing and creation share most of the same functionality, but
the way in which you reach certain pages depends on what task you are 
performing


editQuizInfo -> the page the user is directed to edit high level
	quiz details, such as name, description, subjects, and time limit.
	*this page's content will be generated by a procedure from the 
	database the returns the current quiz info.

	on submission of an edit some php will check the difference
	between the fields the user has editted if any against the original
	values. If there exists a difference a procedure will be 
	called to reflect the changes in the database.

	on successful submission the user will then be sent to the
	editQuizOverview

createQuizInfo -> nearly identical to editQuizInfo except before redirection
	after sumbission a create quiz procedure is called to produce a quiz row in the database

	on successful submission the user will then be sent to the editQuizOverview

editQuizOverview ->
	this page is the central hub for editing/making quizzes
	the user will be displayed the following columns of question data
	order	| type | question text | points | edit btn | remove | view 

	adjacent to each question's row will be buttons that trigger different
	functionality
	
	the edit button will load a page for a single questions edit

	the remove button will will hide the question row from the user
	*this will be handled cosmetically through javascript
	when a button's remove is triggered we need to store
	which question id was removed, with some php.
	on the submission button at the bottom of the page
	php will assess which questions where to be dropped
	and query against the database accordingly

	the view button will bring the user to a page cosmetically identical 
	to page generated by the take a quiz sequences display
	with the added feature of a button to go back to the editQuizOverview

	At the bottom of this page there should be a dropdown that contains
	the question types and adjacent to this will be a add question button
	reading the option selected from the drop down , the add question 
	button will generate a page that is almost identical to 
	the editQuestion page, but does not have data prefilled into it's
	fields. In addition the action on the submission of this page will
	differ.

editQuestion - > 
	this page will be generated depending on the question type and question_id
	that is associated with the button that was clicked on the editQuizOverview
	it will contain a question text field
	a point value field
	
	It will generate answer options depending on the question_type
	and provied fields that are prefilled with the existing data associated 
	with the question.

	In addition there will be validity and delete toggles associated with each
	possile answer.

	At the bottom of the page will be an add answer button that creates
	a new answer field with vailidity and remove buttons associated with it.

	after submission of this page a php script will assess the difference if 
	any on the new form of the question or the new form of the answers
	
	If a difference is observed either 1 or 2 mysql queries will take place 
	to adjust the question values or the answer values

createQuestion -> 
	this page will be nearly identical to the editQuestion page 
	but the fields will not be prefilled with prexistant data

	the action on the page will differ from the editQuestion 
	since the question did not exist in the database prior.

	on submission it will trigger a php script that
	calls a mysql procedure to add the question
	and its associated answers.

orderQuestions ->
	If it is pheasible, this page will provide the user a convienent interface
	to reorder the questions associated with a quiz.
	
	


